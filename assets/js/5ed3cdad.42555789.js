"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[71508],{84760:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>i});var r=n(74848),s=n(28453);const c={id:"python-ctypes-convert-bytes-structure",title:"Python Convert bytes to ctypes.Structure",sidebar_label:"Convert bytes to ctypes.Structure",description:"Python Convert bytes to ctypes.Structure",keywords:["Python","ctypes","Structure","bytes","convert"]},o=void 0,a={id:"lang/python/libraries/ctypes/python-ctypes-convert-bytes-structure",title:"Python Convert bytes to ctypes.Structure",description:"Python Convert bytes to ctypes.Structure",source:"@site/docs/lang/python/libraries/ctypes/python-ctypes-convert-bytes-structure.mdx",sourceDirName:"lang/python/libraries/ctypes",slug:"/lang/python/libraries/ctypes/python-ctypes-convert-bytes-structure",permalink:"/docs/lang/python/libraries/ctypes/python-ctypes-convert-bytes-structure",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1724686915e3,frontMatter:{id:"python-ctypes-convert-bytes-structure",title:"Python Convert bytes to ctypes.Structure",sidebar_label:"Convert bytes to ctypes.Structure",description:"Python Convert bytes to ctypes.Structure",keywords:["Python","ctypes","Structure","bytes","convert"]},sidebar:"python",previous:{title:"contextvar",permalink:"/docs/lang/python/context/contextvar"},next:{title:"concurrent.futures",permalink:"/docs/lang/python/libraries/concurrent-futures"}},u={},i=[{value:"bytes -&gt; ctyeps.Structure",id:"bytes---ctyepsstructure",level:2},{value:"ctypes.Structure -&gt; bytes",id:"ctypesstructure---bytes",level:2}];function y(t){const e={code:"code",h2:"h2",pre:"pre",...(0,s.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"bytes---ctyepsstructure",children:"bytes -> ctyeps.Structure"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'from ctypes import c_int16, c_int32, memmove, pointer, sizeof, Structure\n\n\nclass Data(Structure):\n    # |  a  |  b  |     c     |\n    #  XX XX XX XX XX XX XX XX\n\n    _fields_ = [\n        ("a", c_int16),\n        ("b", c_int16),\n        ("c", c_int32),\n    ]\n\n\n# Little-endian\n# 0x0001 => 0x01 0x00\n# 0x0002 => 0x02 0x00\n# 0x00000003 => 0x03 0x00 0x00 0x00\ndataBytes = bytes([1, 0, 2, 0, 3, 0, 0, 0])\ndataSturct = Data()\n\nmemmove(pointer(dataSturct), dataBytes, sizeof(dataSturct))\n\nassert dataSturct.a == 1\nassert dataSturct.b == 2\nassert dataSturct.c == 3\n'})}),"\n",(0,r.jsx)(e.h2,{id:"ctypesstructure---bytes",children:"ctypes.Structure -> bytes"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'from ctypes import c_int16, c_int32, memmove, pointer, sizeof, Structure\n\n\nclass Data(Structure):\n    # |  a  |  b  |     c     |\n    #  XX XX XX XX XX XX XX XX\n\n    _fields_ = [\n        ("a", c_int16),\n        ("b", c_int16),\n        ("c", c_int32),\n    ]\n\n\n# Little-endian\n# 0x0001 => 0x01 0x00\n# 0x0002 => 0x02 0x00\n# 0x00000003 => 0x03 0x00 0x00 0x00\ndataSturct = Data(a=1, b=2, c=3)\n\ndataBytes = bytes(dataSturct)\n\nassert dataBytes[0] == 1\nassert dataBytes[2] == 2\nassert dataBytes[4] == 3\n'})})]})}function p(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(y,{...t})}):y(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>a});var r=n(96540);const s={},c=r.createContext(s);function o(t){const e=r.useContext(c);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:o(t.components),r.createElement(c.Provider,{value:e},t.children)}}}]);