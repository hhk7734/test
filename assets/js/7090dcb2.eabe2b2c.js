"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[74514],{21283:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var s=t(74848),o=t(28453);const i={id:"github-action",title:"GitHub Action",sidebar_label:"GitHub Action",description:"GitHub Action",keywords:["gitops","cd","github","action"]},r=void 0,a={id:"mlops/mlops/workflow/argo-cd/gitops/github-action",title:"GitHub Action",description:"GitHub Action",source:"@site/docs/mlops/mlops/workflow/argo-cd/gitops/github-action.mdx",sourceDirName:"mlops/mlops/workflow/argo-cd/gitops",slug:"/mlops/mlops/workflow/argo-cd/gitops/github-action",permalink:"/docs/mlops/mlops/workflow/argo-cd/gitops/github-action",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1723642138e3,frontMatter:{id:"github-action",title:"GitHub Action",sidebar_label:"GitHub Action",description:"GitHub Action",keywords:["gitops","cd","github","action"]},sidebar:"mlops",previous:{title:"GitOps",permalink:"/docs/mlops/mlops/workflow/argo-cd/gitops/"},next:{title:"GitHub Action Runner",permalink:"/docs/mlops/mlops/workflow/argo-cd/gitops/github-action-runner"}},c={},u=[{value:"\uc124\uc815 \ud30c\uc77c",id:"\uc124\uc815-\ud30c\uc77c",level:2},{value:"\ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4",id:"\ucee8\ud14d\uc2a4\ud2b8-\uc815\ubcf4",level:2},{value:"\ubc84\uc804 \ud0dc\uadf8",id:"\ubc84\uc804-\ud0dc\uadf8",level:2},{value:"Container Registry",id:"container-registry",level:2},{value:"ECR",id:"ecr",level:3},{value:"Githup",id:"githup",level:3},{value:"Auto Release",id:"auto-release",level:2},{value:"Required",id:"required",level:2},{value:"paths-filter",id:"paths-filter",level:3}];function l(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"\uc124\uc815-\ud30c\uc77c",children:"\uc124\uc815 \ud30c\uc77c"}),"\n",(0,s.jsxs)(e.p,{children:["GitHub Action\uc744 \uc704\ud55c \uc124\uc815\ud30c\uc77c\uc744 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 ",(0,s.jsx)(e.code,{children:".github/workflows"})," \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc800\uc7a5\ud558\uace0 GitHub\uc5d0 \ubc18\uc601\ud558\uba74 \uc790\ub3d9\uc73c\ub85c \ubc18\uc601\ub418\uc5b4 \uc2e4\ud589\ub429\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(e.h2,{id:"\ucee8\ud14d\uc2a4\ud2b8-\uc815\ubcf4",children:"\ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.github.com/en/actions/learn-github-actions/contexts",children:"https://docs.github.com/en/actions/learn-github-actions/contexts"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4\ub97c \uc544\ub798 Action\uc744 \ud1b5\ud574 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"name: Context testing\non: push\n\njobs:\n  dump_contexts_to_log:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Dump GitHub context\n        id: github_context_step\n        run: echo '${{ toJSON(github) }}'\n      - name: Dump job context\n        run: echo '${{ toJSON(job) }}'\n      - name: Dump steps context\n        run: echo '${{ toJSON(steps) }}'\n      - name: Dump runner context\n        run: echo '${{ toJSON(runner) }}'\n      - name: Dump strategy context\n        run: echo '${{ toJSON(strategy) }}'\n      - name: Dump matrix context\n        run: echo '${{ toJSON(matrix) }}'\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\ubc84\uc804-\ud0dc\uadf8",children:"\ubc84\uc804 \ud0dc\uadf8"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'name: Hash\n\non:\n  push:\n    branches:\n      - main\n  workflow_dispatch:\n\njobs:\n  hash:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get TAG\n        id: tag\n        run: |\n          TAG=$(echo ${{ github.sha }} | cut -c1-7)\n          echo TAG=$TAG\n          echo "tag=$TAG" >> $GITHUB_OUTPUT\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'name: Version\n\non:\n  push:\n    tags:\n      - "v[0-9]+.[0-9]+.[0-9]+"\n\njobs:\n  version:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get TAG\n        id: tag\n        run: |\n          TAG=${{ github.ref_name }}\n          echo TAG=$TAG\n          echo "tag=$TAG" >> $GITHUB_OUTPUT\n'})}),"\n",(0,s.jsx)(e.h2,{id:"container-registry",children:"Container Registry"}),"\n",(0,s.jsx)(e.h3,{id:"ecr",children:"ECR"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"name: Push to Amazon ECR\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    name: Build and Push Image\n    runs-on: ubuntu-latest\n    steps:\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v4\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: us-west-2\n\n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@v2\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      # https://github.com/docker/build-push-action\n      - name: Build and push\n        uses: docker/build-push-action@v6\n        with:\n          context: .\n          push: true\n          tags: |\n            ${{ steps.login-ecr.outputs.registry }}/backend:${{ steps.tag.outputs.tag }}\n          cache-from: type=gha\n          cache-to: type=gha,mode=max\n"})}),"\n",(0,s.jsx)(e.h3,{id:"githup",children:"Githup"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"name: Push to GitHub Container Registry\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    name: Build and Push Image\n    runs-on: ubuntu-latest\n    steps:\n      # https://github.com/docker/login-action\n      - name: Login to GitHub Container Registry\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PAT }}\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      # https://github.com/docker/build-push-action\n      - name: Build and push\n        uses: docker/build-push-action@v6\n        with:\n          context: .\n          push: true\n          tags: |\n            ghcr.io/${{ github.repository_owner }}/backend:${{ steps.tag.outputs.tag }}\n          cache-from: type=gha\n          cache-to: type=gha,mode=max\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/docs/mlops/mlops/kubernetes/configuration/secret#imagepullsecrets",children:"GitHub Docker imagePullSecrets"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"auto-release",children:"Auto Release"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'name: Auto Release\n\non:\n  push:\n    tags:\n      - "v[0-9]+.[0-9]+.[0-9]+"\n\njobs:\n  release:\n    name: Publish auto release\n    runs-on: ubuntu-latest\n    needs: [build]\n    permissions:\n      contents: write\n    steps:\n      - name: Release\n        uses: softprops/action-gh-release@v2\n        with:\n          generate_release_notes: true\n'})}),"\n",(0,s.jsx)(e.h2,{id:"required",children:"Required"}),"\n",(0,s.jsxs)(e.p,{children:["Required job\uc774 ",(0,s.jsx)(e.code,{children:"paths"}),"\ub098 ",(0,s.jsx)(e.code,{children:"paths-ignore"})," \uac19\uc740 \uc635\uc158\uc73c\ub85c \uc778\ud574 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc73c\uba74 ",(0,s.jsx)(e.code,{children:"Pending"})," \uc0c1\ud0dc\uc5d0 \ube60\uc838\uc11c PR\uc744 \uc644\ub8cc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574\uc11c\ub294 \ubc18\ub300\ub418\ub294 \ub450 workflow\ub97c \ub9cc\ub4e4\ub418 job \uc774\ub984\uc744 \uac19\uac8c \ud558\ub294 \ubc29\ubc95\uacfc ",(0,s.jsx)(e.a,{href:"https://github.com/dorny/paths-filter",children:"dorny/paths-filter"}),"\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(e.h3,{id:"paths-filter",children:"paths-filter"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"jobs:\n  tests:\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Path filter\n        uses: dorny/paths-filter@v3\n        id: filter\n        with:\n          filters: |\n            backend:\n              - 'backend/**'\n            frontend:\n              - 'frontend/**'\n\n      - name: Test backend\n        if: steps.filter.outputs.backend == 'true'\n        run: |\n          # ...\n\n      - name: Test frontend\n        if: steps.filter.outputs.frontend == 'true'\n        run: |\n          # ...\n"})})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>a});var s=t(96540);const o={},i=s.createContext(o);function r(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);